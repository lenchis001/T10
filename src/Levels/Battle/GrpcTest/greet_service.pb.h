// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: greet_service.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_greet_5fservice_2eproto_2epb_2eh
#define GOOGLE_PROTOBUF_INCLUDED_greet_5fservice_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>

#include "google/protobuf/port_def.inc"
#if PROTOBUF_VERSION < 4023000
#error "This file was generated by a newer version of protoc which is"
#error "incompatible with your Protocol Buffer headers. Please update"
#error "your headers."
#endif  // PROTOBUF_VERSION

#if 4023004 < PROTOBUF_MIN_PROTOC_VERSION
#error "This file was generated by an older version of protoc which is"
#error "incompatible with your Protocol Buffer headers. Please"
#error "regenerate this file with a newer version of protoc."
#endif  // PROTOBUF_MIN_PROTOC_VERSION
#include "google/protobuf/port_undef.inc"
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/service.h"
#include "greet.pb.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_greet_5fservice_2eproto

PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_greet_5fservice_2eproto {
  static const ::uint32_t offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable
    descriptor_table_greet_5fservice_2eproto;
PROTOBUF_NAMESPACE_OPEN
PROTOBUF_NAMESPACE_CLOSE

namespace greet {

// ===================================================================



// ===================================================================


// -------------------------------------------------------------------

class Greeter_Stub;
class Greeter : public ::PROTOBUF_NAMESPACE_ID::Service {
 protected:
  Greeter() = default;

 public:
  using Stub = Greeter_Stub;

  Greeter(const Greeter&) = delete;
  Greeter& operator=(const Greeter&) = delete;
  virtual ~Greeter() = default;

  static const ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor* descriptor();

  virtual void SayHello(::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                        const ::greet::HelloRequest* request,
                        ::greet::HelloReply* response,
                        ::google::protobuf::Closure* done);

  // implements Service ----------------------------------------------
  const ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor* GetDescriptor() override;

  void CallMethod(const ::PROTOBUF_NAMESPACE_ID::MethodDescriptor* method,
                  ::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                  const ::PROTOBUF_NAMESPACE_ID::Message* request,
                  ::PROTOBUF_NAMESPACE_ID::Message* response,
                  ::google::protobuf::Closure* done) override;

  const ::PROTOBUF_NAMESPACE_ID::Message& GetRequestPrototype(
      const ::PROTOBUF_NAMESPACE_ID::MethodDescriptor* method) const override;

  const ::PROTOBUF_NAMESPACE_ID::Message& GetResponsePrototype(
      const ::PROTOBUF_NAMESPACE_ID::MethodDescriptor* method) const override;
};

class Greeter_Stub final : public Greeter {
 public:
  Greeter_Stub(::PROTOBUF_NAMESPACE_ID::RpcChannel* channel);
  Greeter_Stub(::PROTOBUF_NAMESPACE_ID::RpcChannel* channel,
                   ::PROTOBUF_NAMESPACE_ID::Service::ChannelOwnership ownership);

  Greeter_Stub(const Greeter_Stub&) = delete;
  Greeter_Stub& operator=(const Greeter_Stub&) = delete;

  ~Greeter_Stub() override;

  inline ::PROTOBUF_NAMESPACE_ID::RpcChannel* channel() { return channel_; }

  // implements Greeter ------------------------------------------
  void SayHello(::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                        const ::greet::HelloRequest* request,
                        ::greet::HelloReply* response,
                        ::google::protobuf::Closure* done) override;

 private:
  ::PROTOBUF_NAMESPACE_ID::RpcChannel* channel_;
  bool owns_channel_;
};
// ===================================================================



// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace greet


// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // GOOGLE_PROTOBUF_INCLUDED_greet_5fservice_2eproto_2epb_2eh
