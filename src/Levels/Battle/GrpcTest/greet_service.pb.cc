// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: greet_service.proto

#include "greet_service.pb.h"

#include <algorithm>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::PROTOBUF_NAMESPACE_ID;
namespace _pbi = ::PROTOBUF_NAMESPACE_ID::internal;
namespace greet {
}  // namespace greet
static constexpr const ::_pb::EnumDescriptor**
    file_level_enum_descriptors_greet_5fservice_2eproto = nullptr;
static const ::_pb::ServiceDescriptor*
    file_level_service_descriptors_greet_5fservice_2eproto[1];
const ::uint32_t TableStruct_greet_5fservice_2eproto::offsets[1] = {};
static constexpr ::_pbi::MigrationSchema* schemas = nullptr;
static constexpr ::_pb::Message* const* file_default_instances = nullptr;
const char descriptor_table_protodef_greet_5fservice_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
    "\n\023greet_service.proto\022\005greet\032\013greet.prot"
    "o2=\n\007Greeter\0222\n\010SayHello\022\023.greet.HelloRe"
    "quest\032\021.greet.HelloReplyB\003\200\001\001b\006proto3"
};
static const ::_pbi::DescriptorTable* const descriptor_table_greet_5fservice_2eproto_deps[1] =
    {
        &::descriptor_table_greet_2eproto,
};
static ::absl::once_flag descriptor_table_greet_5fservice_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_greet_5fservice_2eproto = {
    false,
    false,
    117,
    descriptor_table_protodef_greet_5fservice_2eproto,
    "greet_service.proto",
    &descriptor_table_greet_5fservice_2eproto_once,
    descriptor_table_greet_5fservice_2eproto_deps,
    1,
    0,
    schemas,
    file_default_instances,
    TableStruct_greet_5fservice_2eproto::offsets,
    nullptr,
    file_level_enum_descriptors_greet_5fservice_2eproto,
    file_level_service_descriptors_greet_5fservice_2eproto,
};

// This function exists to be marked as weak.
// It can significantly speed up compilation by breaking up LLVM's SCC
// in the .pb.cc translation units. Large translation units see a
// reduction of more than 35% of walltime for optimized builds. Without
// the weak attribute all the messages in the file, including all the
// vtables and everything they use become part of the same SCC through
// a cycle like:
// GetMetadata -> descriptor table -> default instances ->
//   vtables -> GetMetadata
// By adding a weak function here we break the connection from the
// individual vtables back into the descriptor table.
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_greet_5fservice_2eproto_getter() {
  return &descriptor_table_greet_5fservice_2eproto;
}
// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2
static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_greet_5fservice_2eproto(&descriptor_table_greet_5fservice_2eproto);
namespace greet {
// ===================================================================

const ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor* Greeter::descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_greet_5fservice_2eproto);
  return file_level_service_descriptors_greet_5fservice_2eproto[0];
}

const ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor* Greeter::GetDescriptor() {
  return descriptor();
}

void Greeter::SayHello(::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                         const ::greet::HelloRequest*, ::greet::HelloReply*, ::google::protobuf::Closure* done) {
  controller->SetFailed("Method SayHello() not implemented.");
  done->Run();
}

void Greeter::CallMethod(
    const ::PROTOBUF_NAMESPACE_ID::MethodDescriptor* method,
    ::PROTOBUF_NAMESPACE_ID::RpcController* controller,
    const ::PROTOBUF_NAMESPACE_ID::Message* request,
    ::PROTOBUF_NAMESPACE_ID::Message* response, ::google::protobuf::Closure* done) {
  ABSL_DCHECK_EQ(method->service(), file_level_service_descriptors_greet_5fservice_2eproto[0]);
  switch (method->index()) {
    case 0:
      SayHello(controller,
             ::PROTOBUF_NAMESPACE_ID::internal::DownCast<const ::greet::HelloRequest*>(request),
             ::PROTOBUF_NAMESPACE_ID::internal::DownCast<::greet::HelloReply*>(response), done);
      break;

    default:
      ABSL_LOG(FATAL) << "Bad method index; this should never happen.";
      break;
  }
}

const ::PROTOBUF_NAMESPACE_ID::Message& Greeter::GetRequestPrototype(
    const ::PROTOBUF_NAMESPACE_ID::MethodDescriptor* method) const {
  ABSL_DCHECK_EQ(method->service(), descriptor());
  switch (method->index()) {
    case 0:
      return ::greet::HelloRequest::default_instance();

    default:
      ABSL_LOG(FATAL) << "Bad method index; this should never happen.";
      return *::PROTOBUF_NAMESPACE_ID::MessageFactory::generated_factory()
                  ->GetPrototype(method->input_type());
  }
}

const ::PROTOBUF_NAMESPACE_ID::Message& Greeter::GetResponsePrototype(
    const ::PROTOBUF_NAMESPACE_ID::MethodDescriptor* method) const {
  ABSL_DCHECK_EQ(method->service(), descriptor());
  switch (method->index()) {
    case 0:
      return ::greet::HelloReply::default_instance();

    default:
      ABSL_LOG(FATAL) << "Bad method index; this should never happen.";
      return *::PROTOBUF_NAMESPACE_ID::MessageFactory::generated_factory()
                  ->GetPrototype(method->output_type());
  }
}

Greeter_Stub::Greeter_Stub(::PROTOBUF_NAMESPACE_ID::RpcChannel* channel)
    : channel_(channel), owns_channel_(false) {}

Greeter_Stub::Greeter_Stub(
    ::PROTOBUF_NAMESPACE_ID::RpcChannel* channel,
    ::PROTOBUF_NAMESPACE_ID::Service::ChannelOwnership ownership)
    : channel_(channel),
      owns_channel_(ownership ==
                    ::PROTOBUF_NAMESPACE_ID::Service::STUB_OWNS_CHANNEL) {}

Greeter_Stub::~Greeter_Stub() {
  if (owns_channel_) delete channel_;
}

void Greeter_Stub::SayHello(::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                              const ::greet::HelloRequest* request,
                              ::greet::HelloReply* response, ::google::protobuf::Closure* done) {
  channel_->CallMethod(descriptor()->method(0), controller,
                       request, response, done);
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace greet
PROTOBUF_NAMESPACE_OPEN
PROTOBUF_NAMESPACE_CLOSE
// @@protoc_insertion_point(global_scope)
#include "google/protobuf/port_undef.inc"
